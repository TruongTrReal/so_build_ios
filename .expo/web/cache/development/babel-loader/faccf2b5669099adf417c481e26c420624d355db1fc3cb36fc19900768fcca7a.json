{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AreaChart, Path } from 'react-native-svg-charts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar StockLineChart = function StockLineChart(_ref) {\n  var indexName = _ref.indexName,\n    onExportChange = _ref.onExportChange;\n  var COLOR = '#ce5a63';\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    stockData = _useState2[0],\n    setStockData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchStockData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        console.log('calling API');\n        try {\n          var response = yield fetch(`https://magnetic-eminent-bass.ngrok-free.app/stockapi?data_type=index&stock_name=${indexName}`);\n          var data = yield response.json();\n          if (Array.isArray(data)) {\n            var closePrices = data.map(function (item) {\n              return item.close;\n            });\n            setStockData(closePrices);\n            if (onExportChange && typeof onExportChange === 'function') {\n              if (closePrices.length > 1) {\n                var CHANGE = (closePrices[closePrices.length - 1] - closePrices[0]) / 1000;\n                var CHANGE_PERCENT = (CHANGE / Math.abs(closePrices[0]) * 100000).toFixed(2);\n                var CLOSE_PRICE = (closePrices[closePrices.length - 1] / 1000).toFixed(2);\n                var _COLOR;\n                if (CHANGE < 0) {\n                  _COLOR = '#ce5a63';\n                } else if (CHANGE > 0) {\n                  _COLOR = '#32C760';\n                } else {\n                  _COLOR = '#F7CE46';\n                }\n                onExportChange({\n                  CHANGE: CHANGE,\n                  CHANGE_PERCENT: CHANGE_PERCENT,\n                  CLOSE_PRICE: CLOSE_PRICE,\n                  COLOR: _COLOR\n                });\n              }\n            }\n          } else {\n            console.error('Invalid stock data format:', data);\n          }\n        } catch (error) {\n          console.error('Error fetching stock data:', error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchStockData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchStockData();\n    var intervalId = setInterval(function () {\n      fetchStockData();\n    }, 15000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  if (loading) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(ActivityIndicator, {\n        size: \"small\",\n        color: \"#0000ff\"\n      })\n    });\n  }\n  var Line = function Line(_ref3) {\n    var line = _ref3.line;\n    return _jsx(Path, {\n      d: line,\n      stroke: COLOR,\n      strokeWidth: 1.5,\n      fill: 'none'\n    }, 'line ');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(AreaChart, {\n      style: {\n        height: height * 0.015,\n        width: width * 0.14,\n        shadowColor: 'white',\n        backgroundColor: '#fff',\n        marginLeft: 2\n      },\n      data: stockData,\n      svg: {\n        strokeWidth: 1.5,\n        clipPath: '#12',\n        fill: 'rgba(134, 65, 244, 0)'\n      },\n      contentInset: {\n        top: 2,\n        bottom: 2,\n        left: 3,\n        right: 3\n      },\n      children: _jsx(Line, {})\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {},\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default StockLineChart;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Dimensions","ActivityIndicator","AreaChart","Path","jsx","_jsx","_Dimensions$get","get","height","width","StockLineChart","_ref","indexName","onExportChange","COLOR","_useState","_useState2","_slicedToArray","stockData","setStockData","_useState3","_useState4","loading","setLoading","fetchStockData","_ref2","_asyncToGenerator","console","log","response","fetch","data","json","Array","isArray","closePrices","map","item","close","length","CHANGE","CHANGE_PERCENT","Math","abs","toFixed","CLOSE_PRICE","error","apply","arguments","intervalId","setInterval","clearInterval","style","styles","loadingContainer","children","size","color","Line","_ref3","line","d","stroke","strokeWidth","fill","container","shadowColor","backgroundColor","marginLeft","svg","clipPath","contentInset","top","bottom","left","right","create","flex","justifyContent","alignItems"],"sources":["C:/Users/truon/OneDrive/Projects/so_rebuild/so/components/StockLineChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Dimensions, ActivityIndicator } from 'react-native';\r\nimport { AreaChart, Path } from 'react-native-svg-charts';\r\n\r\nconst { height, width } = Dimensions.get('window');\r\n\r\nconst StockLineChart = ({ indexName, onExportChange }) => {\r\n  let COLOR = '#ce5a63';\r\n\r\n  const [stockData, setStockData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStockData = async () => {\r\n      console.log('calling API');\r\n      try {\r\n        const response = await fetch(\r\n          `https://magnetic-eminent-bass.ngrok-free.app/stockapi?data_type=index&stock_name=${indexName}`\r\n        );\r\n        const data = await response.json();\r\n  \r\n        if (Array.isArray(data)) {\r\n          const closePrices = data.map(item => item.close);\r\n  \r\n          setStockData(closePrices);\r\n  \r\n          if (onExportChange && typeof onExportChange === 'function') {\r\n            // Calculate change and percentage change\r\n            if (closePrices.length > 1) {\r\n              const CHANGE = ((closePrices[closePrices.length - 1] - closePrices[0]) / 1000);\r\n              const CHANGE_PERCENT = ((CHANGE / Math.abs(closePrices[0])) * 100000).toFixed(2);\r\n              const CLOSE_PRICE = ((closePrices[closePrices.length - 1]) / 1000).toFixed(2);\r\n  \r\n              let COLOR;\r\n              if (CHANGE < 0) {\r\n                COLOR = '#ce5a63';\r\n              } else if (CHANGE > 0) {\r\n                COLOR = '#32C760';\r\n              } else {\r\n                COLOR = '#F7CE46';\r\n              }\r\n  \r\n              onExportChange({ CHANGE, CHANGE_PERCENT, CLOSE_PRICE, COLOR });\r\n            }\r\n          }\r\n        } else {\r\n          console.error('Invalid stock data format:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching stock data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStockData();\r\n    const intervalId = setInterval(() => {\r\n      fetchStockData();\r\n    }, 15000); // 10 seconds\r\n  \r\n    // Clear the interval when the component is unmounted\r\n    return () => clearInterval(intervalId);\r\n  \r\n    // Only run the effect when indexName changes\r\n  }, []);\r\n  \r\n   // Add indexName and onExportChange as dependencies\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"small\" color=\"#0000ff\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const Line = ({ line }) => (\r\n    <Path\r\n        key={ 'line ' }\r\n        d={ line }\r\n        stroke={ COLOR }\r\n        strokeWidth={1.5}\r\n        fill={ 'none' }\r\n    />\r\n  )\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <AreaChart\r\n        style={{ \r\n          height: height*0.015,\r\n          width: width*0.14,\r\n          shadowColor: 'white',\r\n          backgroundColor: '#fff',\r\n          marginLeft: 2,\r\n        }}\r\n        data={stockData} // Use the fetched data instead of the static 'data' array\r\n        svg={{ \r\n          strokeWidth: 1.5, \r\n          clipPath: '#12',\r\n          fill: 'rgba(134, 65, 244, 0)'\r\n        }}\r\n        contentInset={{ top: 2, bottom: 2, left: 3, right: 3 }}\r\n      >\r\n        <Line/>\r\n      </AreaChart>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default StockLineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}